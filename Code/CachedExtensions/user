{"input":{"ourVersion":"1.29.0","commit":"5f24c93878bd4bc645a4a17c620e2487b11005f9","locale":"en-us","devMode":false,"absoluteFolderPath":"/home/miltfra/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1542375312877},"result":[{"name":"rainbow-brackets","displayName":"Rainbow Brackets","description":"A rainbow brackets extension for VS Code.","version":"0.0.6","publisher":"2gua","license":"MIT","icon":"images/rainbowBrackets.png","author":{"name":"2gua"},"galleryBanner":{"color":"#5c2d91","theme":"dark"},"engines":{"vscode":"^1.0.0"},"homepage":"http://www.2gua.info/","categories":["Other"],"keywords":["rainbow","bracket","brackets"],"activationEvents":["*"],"main":"/home/miltfra/.vscode/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^1.8.5","vscode":"^0.11.0"},"uuid":"797a79de-a0fd-4349-9034-bec47be9a941","isBuiltin":false,"isUnderDevelopment":false,"id":"2gua.rainbow-brackets","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/2gua.rainbow-brackets-0.0.6","path":"/home/miltfra/.vscode/extensions/2gua.rainbow-brackets-0.0.6","scheme":"file"}},{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"2.0.3","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.8.1"},"activationEvents":["onLanguage:ada","onLanguage:al","onLanguage:asciidoc","onLanguage:bibtex","onLanguage:c","onLanguage:clojure","onLanguage:COBOL","onLanguage:coffeescript","onLanguage:cpp","onLanguage:csharp","onLanguage:css","onLanguage:d","onLanguage:dart","onLanguage:diagram","onLanguage:dockerfile","onLanguage:elixir","onLanguage:erlang","onLanguage:flax","onLanguage:fsharp","onLanguage:fortran-modern","onLanguage:gdscript","onLanguage:go","onLanguage:graphql","onLanguage:groovy","onLanguage:haskell","onLanguage:html","onLanguage:haxe","onLanguage:hive-sql","onLanguage:kotlin","onLanguage:java","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:jsonc","onLanguage:julia","onLanguage:latex","onLanguage:less","onLanguage:lisp","onLanguage:lua","onLanguage:makefile","onLanguage:matlab","onLanguage:nim","onLanguage:objective-c","onLanguage:objective-cpp","onLanguage:objectpascal","onLanguage:pascal","onLanguage:perl","onLanguage:perl6","onLanguage:pig","onLanguage:plaintext","onLanguage:plsql","onLanguage:php","onLanguage:powershell","onLanguage:puppet","onLanguage:python","onLanguage:r","onLanguage:racket","onLanguage:ruby","onLanguage:rust","onLanguage:scala","onLanguage:sas","onLanguage:sass","onLanguage:scss","onLanguage:shaderlab","onLanguage:shellscript","onLanguage:sql","onLanguage:stata","onLanguage:stylus","onLanguage:swift","onLanguage:tcl","onLanguage:terraform","onLanguage:twig","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:vb","onLanguage:verilog","onLanguage:vue","onLanguage:yaml"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"main":"/home/miltfra/.vscode/extensions/aaron-bond.better-comments-2.0.3/out/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","lint":"tslint -c tslint.json 'src/**/*.ts'"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"?","color":"#3498DB","strikethrough":false,"backgroundColor":"transparent"},{"tag":"//","color":"#474747","strikethrough":true,"backgroundColor":"transparent"},{"tag":"todo","color":"#FF8C00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"*","color":"#98C379","strikethrough":false,"backgroundColor":"transparent"}]}}}},"devDependencies":{"typescript":"^2.6.1","vsce":"^1.48.0","vscode":"^1.1.0","@types/node":"^8.0.0","tslint":"^5.10.0"},"uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b","isBuiltin":false,"isUnderDevelopment":false,"id":"aaron-bond.better-comments","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/aaron-bond.better-comments-2.0.3","path":"/home/miltfra/.vscode/extensions/aaron-bond.better-comments-2.0.3","scheme":"file"}},{"name":"wal","displayName":"wal","description":"wal theme generator","version":"0.1.0","publisher":"cmschuetz12","engines":{"vscode":"^1.25.0"},"categories":["Other"],"repository":{"type":"git","url":"https://github.com/cmschuetz/vscode-wal.git"},"activationEvents":["*"],"main":"/home/miltfra/.vscode/extensions/cmschuetz12.wal-0.1.0/out/extension","contributes":{"commands":[{"command":"wal.selectTokenColorTheme","title":"Wal: Select Token Color Theme","description":"Select theme for syntax highlighting"}],"themes":[{"label":"Wal","path":"./themes/wal.json"}],"configuration":{"type":"object","title":"Wal configuration","properties":{"wal.tokenColorTheme":{"type":["string","null"],"default":null,"description":"Theme used for syntax highlighting"},"wal.autoReload":{"type":"boolean","default":false,"description":"Auto reload window on configuration changes that require reload"}}}},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,json,css,md}":["prettier --write","git add"]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^5.2.5","@types/node":"^7.0.0","@types/strip-json-comments":"^0.0.30","@types/util.promisify":"^1.0.0","husky":"^1.0.0-rc.13","lint-staged":"^7.2.0","prettier":"^1.14.1","tslint":"^5.11.0","typescript":"^3.0.1","vscode":"^1.1.18"},"dependencies":{"strip-json-comments":"^2.0.1","util.promisify":"^1.0.0"},"uuid":"4b22df2c-6755-4d0f-b6ec-168bede14d1e","isBuiltin":false,"isUnderDevelopment":false,"id":"cmschuetz12.wal","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/cmschuetz12.wal-0.1.0","path":"/home/miltfra/.vscode/extensions/cmschuetz12.wal-0.1.0","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"8.5.6","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.25.0"},"main":"/home/miltfra/.vscode/extensions/eamodio.gitlens-8.5.6/out/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack","href":"https://join.slack.com/t/vscode-dev-community/shared_invite/enQtMjIxOTgxNDE3NzM0LWU5M2ZiZDU1YjBlMzdlZjA2YjBjYzRhYTM5NTgzMTAxMjdiNWU0ZmQzYWI3MWU5N2Q1YjBiYmQ4MzY0NDE1MzY","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"description":"Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","description":"Specifies the format of the gutter blame annotations\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.blame.dateFormat`)\n ${agoOrDate} - commit date specified by `gitlens.defaultDateStyle`\n ${authorAgo} - commit author, relative commit date\n ${authorAgoOrDate} - commit author, commit date specified by `gitlens.defaultDateStyle`\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"description":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"description":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"description":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"description":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"description":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"description":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"description":"Specifies the command to be executed when the `authors` code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show an `authors` code lens showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any Git code lens, by default\nUse the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"description":"Specifies the command to be executed when the `recent change` code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show a `recent change` code lens showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language\nMust be a member of `SymbolKind`"}}},"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies a set of document symbols where Git code lens will or will not be shown in the document\nPrefix with `!` to not show Git code lens for the symbol\nMust be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"description":"Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide a blame annotation for the current line, by default\nUse the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${authorAgoOrDate} • ${message}","description":"Specifies the format of the current line blame annotation\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.currentLine.dateFormat`)\n ${agoOrDate} - commit date specified by `gitlens.defaultDateStyle`\n ${authorAgo} - commit author, relative commit date\n ${authorAgoOrDate} - commit author, commit date specified by `gitlens.defaultDateStyle`\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"description":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"description":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"description":"Specifies how absolute dates will be formatted by default\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"description":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mm","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"description":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.explorers.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images instead of commit (or status) icons in the `GitLens` and `GitLens Results` explorers","scope":"window"},"gitlens.explorers.commitFileFormat":{"type":"string","default":"${filePath}","description":"Specifies the format of a committed file in the `GitLens` and `GitLens Results` explorers\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path","scope":"window"},"gitlens.explorers.commitFormat":{"type":"string","default":"${message}  •  ${authorAgoOrDate}   (${id})","description":"Specifies the format of committed changes in the `GitLens` and `GitLens Results` explorers\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.defaultDateFormat`)\\n ${agoOrDate} - commit date specified by `gitlens.defaultDateStyle`\n ${authorAgo} - commit author, relative commit date\n ${authorAgoOrDate} - commit author, commit date specified by `gitlens.defaultDateStyle`\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.explorers.stashFileFormat":{"type":"string","default":"${filePath}","description":"Specifies the format of a stashed file in the `GitLens` and `GitLens Results` explorers\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path","scope":"window"},"gitlens.explorers.stashFormat":{"type":"string","default":"${message}","description":"Specifies the format of stashed changes in the `GitLens` and `GitLens Results` explorers\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.statusBar.dateFormat`)\n ${agoOrDate} - commit date specified by `gitlens.defaultDateStyle`\n ${authorAgo} - commit author, relative commit date\n ${authorAgoOrDate} - commit author, commit date specified by `gitlens.defaultDateStyle`\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.explorers.statusFileFormat":{"type":"string","default":"${working}${filePath}","description":"Specifies the format of the status of a working or committed file in the `GitLens` and `GitLens Results` explorers\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path\n ${working} - optional indicator if the file is uncommitted","scope":"window"},"gitlens.gitExplorer.autoRefresh":{"type":"boolean","default":true,"description":"Specifies whether to automatically refresh the `GitLens` explorer when the repository or the file system changes","scope":"window"},"gitlens.gitExplorer.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"description":"Specifies how the `GitLens` explorer will display branches","scope":"window"},"gitlens.gitExplorer.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.files.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (flatten) unnecessary file nesting in the `GitLens` explorer\nOnly applies when `#gitlens.gitExplorer.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.gitExplorer.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.gitExplorer.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"description":"Specifies how the `GitLens` explorer will display files","scope":"window"},"gitlens.gitExplorer.files.threshold":{"type":"number","default":5,"description":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the `GitLens` explorer\nOnly applies when `#gitlens.gitExplorer.files.layout#` is set to `auto`","scope":"window"},"gitlens.gitExplorer.includeWorkingTree":{"type":"boolean","default":true,"description":"Specifies whether to include working tree files inside the `Repository Status` node of the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens view","Adds to the Explorer view","Adds to the Source Control view"],"description":"Specifies where to show the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.showTrackingBranch":{"type":"boolean","default":true,"description":"Specifies whether to show the tracking branch when displaying local branches in the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.view":{"type":"string","default":"auto","enum":["auto","history","repository"],"enumDescriptions":["Shows the last selected view, defaults to `repository`","Shows the commit history of the current file","Shows a repository explorer"],"description":"Specifies the starting view of the `GitLens` explorer","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","description":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","description":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","description":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"description":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.historyExplorer.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images instead of status icons in the `GitLens File History` explorer","scope":"window"},"gitlens.historyExplorer.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show the current file history undocked in a `GitLens File History` explorer","scope":"window"},"gitlens.historyExplorer.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens view","Adds to the Explorer view","Adds to the Source Control view"],"description":"Specifies where to show the `GitLens File History` explorer","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"description":"Specifies whether to provide a changes (diff) hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"description":"Specifies whether to provide a commit details hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"description":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"description":"Specifies whether to provide a changes (diff) hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"description":"Specifies whether to provide a commit details hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"description":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"description":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"description":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":true,"history":false,"remote":true},"editorGroup":{"blame":true,"compare":true,"history":false,"remote":false},"editorTab":{"compare":false,"history":false,"remote":true},"explorer":{"compare":true,"history":true,"remote":true}},"description":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","description":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide the active GitLens mode on the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"description":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"statusBarItemName":{"type":"string"},"description":{"type":"string"},"codeLens":{"type":"boolean"},"currentLine":{"type":"boolean"},"explorers":{"type":"boolean"},"hovers":{"type":"boolean"},"statusBar":{"type":"boolean"}}},"review":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"statusBarItemName":{"type":"string"},"description":{"type":"string"},"codeLens":{"type":"boolean"},"currentLine":{"type":"boolean"},"explorers":{"type":"boolean"},"hovers":{"type":"boolean"},"statusBar":{"type":"boolean"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"statusBarItemName":{"type":"string"},"description":{"type":"string"},"codeLens":{"type":"boolean"},"currentLine":{"type":"boolean"},"explorers":{"type":"boolean"},"hovers":{"type":"boolean"},"statusBar":{"type":"boolean"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"description":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"silent","enum":["silent","errors","verbose","debug"],"description":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"description":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"description":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo} - repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${branch} - branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${branch} - branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${id} - commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${line} - formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${branch} - branch\n ${line} - formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${id} - commit id\n ${line} - formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line} - line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start} - starting line\n ${end} - ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"description":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.resultsExplorer.files.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (flatten) unnecessary file nesting in the `GitLens Results` explorer\nOnly applies when `#gitlens.resultsExplorer.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.resultsExplorer.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.gitExplorer.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"description":"Specifies how the `GitLens Results` explorer will display files","scope":"window"},"gitlens.resultsExplorer.files.threshold":{"type":"number","default":5,"description":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the `GitLens Results` explorer\nOnly applies when `#gitlens.resultsExplorer.files.layout#` is set to `auto`","scope":"window"},"gitlens.resultsExplorer.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens view","Adds to the Explorer view","Adds to the Source Control view"],"description":"Specifies where to show the `GitLens Results` explorer","scope":"window"},"gitlens.settings.mode":{"type":"string","default":"simple","enum":["simple","advanced"],"enumDescriptions":["Only displays common settings","Displays all settings"],"description":"Specifies the display mode of the interactive settings editor","scope":"window"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"description":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"description":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"description":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"description":"Specifies the date format of absolute dates shown in the blame information on the status bar. See https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide blame information on the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${authorAgoOrDate}","description":"Specifies the format of the status bar blame information\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.statusBar.dateFormat`)\n ${agoOrDate} - commit date specified by `gitlens.defaultDateStyle`\n ${authorAgo} - commit author, relative commit date\n ${authorAgoOrDate} - commit author, commit date specified by `gitlens.defaultDateStyle`\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"description":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","description":"Specifies the string to be shown in place of both the `recent change` and `authors` code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","description":"Specifies the string to be shown in place of the `recent change` code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","description":"Specifies the string to be shown in place of the `authors` code lens when there are unsaved changes","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"description":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"description":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"description":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"description":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.git":{"type":"string","default":null,"description":"Specifies the path to the git executable to use. Use as a last resort as GitLens will use the built-in `git.path` setting first","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"description":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"description":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressShowKeyBindingsNotice":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressShowKeyBindingsNotice":{"type":"boolean","default":false}},"description":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"description":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"description":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `telemetry.enableTelemetry` setting","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens"},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showGitExplorer","title":"Show GitLens Explorer","category":"GitLens"},{"command":"gitlens.showHistoryExplorer","title":"Show File History Explorer","category":"GitLens"},{"command":"gitlens.showResultsExplorer","title":"Show Results Explorer","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffHeadWithBranch","title":"Compare HEAD with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWorkingWithBranch","title":"Compare Working Tree with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWith","title":"Compare File Revisions","category":"GitLens"},{"command":"gitlens.diffWithBranch","title":"Compare File with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Compare File with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithPrevious","title":"Compare File with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiff","title":"Compare File with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Compare Commit with Previous","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Compare File with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Compare File with Working Revision","category":"GitLens"},{"command":"gitlens.diffLineWithWorking","title":"Compare Commit with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon.svg","light":"images/light/git-icon.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon-orange.svg","light":"images/light/git-icon-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/git-icon-progress.svg","light":"images/light/git-icon-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens"},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon.svg","light":"images/light/git-icon.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens"},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote File Url to Clipboard","category":"GitLens"},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches in Remote","category":"GitLens"},{"command":"gitlens.openBranchInRemote","title":"Open Branch in Remote","category":"GitLens"},{"command":"gitlens.openCommitInRemote","title":"Open Commit in Remote","category":"GitLens"},{"command":"gitlens.openFileInRemote","title":"Open File in Remote","category":"GitLens"},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository in Remote","category":"GitLens"},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens"},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens"},{"command":"gitlens.stashSave","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.explorers.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.explorers.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.explorers.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.explorers.openFileRevision","title":"Open Revision","category":"GitLens"},{"command":"gitlens.explorers.openFileRevisionInRemote","title":"Open Revision in Remote","category":"GitLens"},{"command":"gitlens.explorers.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.explorers.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.explorers.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.explorers.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.compareWithHead","title":"Compare with HEAD","category":"GitLens"},{"command":"gitlens.explorers.compareWithRemote","title":"Compare with Remote","category":"GitLens"},{"command":"gitlens.explorers.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.explorers.compareWithWorking","title":"Compare with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.explorers.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.explorers.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCheckoutCommit","title":"Checkout Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.explorers.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.gitExplorer.undockHistory","title":"Undock File History from GitLens Explorer","category":"GitLens","icon":{"dark":"images/dark/icon-undock.svg","light":"images/light/icon-undock.svg"}},{"command":"gitlens.gitExplorer.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.gitExplorer.refreshNode","title":"Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.gitExplorer.switchToHistoryView","title":"Switch to File History View","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.gitExplorer.switchToRepositoryView","title":"Switch to Repository View","category":"GitLens","icon":{"dark":"images/dark/icon-repo.svg","light":"images/light/icon-repo.svg"}},{"command":"gitlens.historyExplorer.close","title":"Close","category":"GitLens","icon":{"dark":"images/dark/icon-close.svg","light":"images/light/icon-close.svg"}},{"command":"gitlens.historyExplorer.dock","title":"Dock File History to GitLens Explorer","category":"GitLens","icon":{"dark":"images/dark/icon-dock.svg","light":"images/light/icon-dock.svg"}},{"command":"gitlens.historyExplorer.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.historyExplorer.refreshNode","title":"Refresh","category":"GitLens"},{"command":"gitlens.historyExplorer.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.historyExplorer.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.resultsExplorer.clearResultsNode","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.resultsExplorer.close","title":"Close","category":"GitLens","icon":{"dark":"images/dark/icon-close.svg","light":"images/light/icon-close.svg"}},{"command":"gitlens.resultsExplorer.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.resultsExplorer.refreshNode","title":"Refresh","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.resultsExplorer.swapComparision","title":"Swap Comparision","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showGitExplorer","when":"gitlens:enabled && gitlens:gitExplorer"},{"command":"gitlens.showHistoryExplorer","when":"gitlens:enabled && gitlens:historyExplorer"},{"command":"gitlens.showHistoryExplorer","when":"gitlens:enabled && !gitlens:historyExplorer && gitlens:gitExplorer"},{"command":"gitlens.showResultsExplorer","when":"gitlens:enabled && gitlens:resultsExplorer"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWith","when":"false"},{"command":"gitlens.diffWithBranch","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:enabled"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.explorers.openChanges","when":"false"},{"command":"gitlens.explorers.openDirectoryDiff","when":"false"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.explorers.openChangesWithWorking","when":"false"},{"command":"gitlens.explorers.openFile","when":"false"},{"command":"gitlens.explorers.openFileRevision","when":"false"},{"command":"gitlens.explorers.openFileRevisionInRemote","when":"false"},{"command":"gitlens.explorers.openChangedFiles","when":"false"},{"command":"gitlens.explorers.openChangedFileChanges","when":"false"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.explorers.openChangedFileRevisions","when":"false"},{"command":"gitlens.explorers.applyChanges","when":"false"},{"command":"gitlens.explorers.closeRepository","when":"false"},{"command":"gitlens.explorers.compareAncestryWithWorking","when":"false"},{"command":"gitlens.explorers.compareWithHead","when":"false"},{"command":"gitlens.explorers.compareWithRemote","when":"false"},{"command":"gitlens.explorers.compareWithSelected","when":"false"},{"command":"gitlens.explorers.compareWithWorking","when":"false"},{"command":"gitlens.explorers.selectForCompare","when":"false"},{"command":"gitlens.explorers.terminalCheckoutBranch","when":"false"},{"command":"gitlens.explorers.terminalCreateBranch","when":"false"},{"command":"gitlens.explorers.terminalDeleteBranch","when":"false"},{"command":"gitlens.explorers.terminalMergeBranch","when":"false"},{"command":"gitlens.explorers.terminalRebaseBranch","when":"false"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.explorers.terminalCheckoutCommit","when":"false"},{"command":"gitlens.explorers.terminalCherryPickCommit","when":"false"},{"command":"gitlens.explorers.terminalPushCommit","when":"false"},{"command":"gitlens.explorers.terminalRebaseCommit","when":"false"},{"command":"gitlens.explorers.terminalResetCommit","when":"false"},{"command":"gitlens.explorers.terminalRevertCommit","when":"false"},{"command":"gitlens.explorers.terminalRemoveRemote","when":"false"},{"command":"gitlens.explorers.terminalCreateTag","when":"false"},{"command":"gitlens.explorers.terminalDeleteTag","when":"false"},{"command":"gitlens.gitExplorer.refresh","when":"false"},{"command":"gitlens.gitExplorer.refreshNode","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","when":"false"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","when":"false"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","when":"false"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","when":"false"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","when":"false"},{"command":"gitlens.gitExplorer.switchToHistoryView","when":"gitlens:enabled && !gitlens:historyExplorer && gitlens:gitExplorer:view == repository"},{"command":"gitlens.gitExplorer.switchToRepositoryView","when":"gitlens:enabled && !gitlens:historyExplorer && gitlens:gitExplorer:view == history"},{"command":"gitlens.gitExplorer.undockHistory","when":"gitlens:enabled && !gitlens:historyExplorer"},{"command":"gitlens.historyExplorer.close","when":"false"},{"command":"gitlens.historyExplorer.dock","when":"gitlens:enabled && gitlens:historyExplorer"},{"command":"gitlens.historyExplorer.refresh","when":"false"},{"command":"gitlens.historyExplorer.refreshNode","when":"false"},{"command":"gitlens.historyExplorer.setRenameFollowingOn","when":"false"},{"command":"gitlens.historyExplorer.setRenameFollowingOff","when":"false"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"false"},{"command":"gitlens.resultsExplorer.close","when":"false"},{"command":"gitlens.resultsExplorer.refresh","when":"false"},{"command":"gitlens.resultsExplorer.refreshNode","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","when":"false"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","when":"false"},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","when":"false"},{"command":"gitlens.resultsExplorer.swapComparision","when":"false"}],"editor/context":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"1_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_gitlens@3"}],"editor/title":[{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiff","alt":"gitlens.diffWithRevision","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git","group":"navigation@99"},{"command":"gitlens.openWorkingFile","when":"!gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && isInDiffEditor","group":"navigation@99"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editorGroup.remote","group":"4_gitlens"},{"command":"gitlens.showQuickFileHistory","when":"editorFocus && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.history","group":"4_gitlens"}],"editor/title/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editorTab.remote","group":"2_files@100"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_gitlens_1@1"},{"command":"gitlens.diffWithWorking","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_gitlens_2@1"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"navigation@100"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"1_gitlens_1@1"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"9_gitlens@1"}],"scm/resourceGroup/context":[{"command":"gitlens.openChangedFiles","when":"gitlens:enabled","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled","group":"2_gitlens@2"},{"command":"gitlens.externalDiff","when":"gitlens:enabled","group":"2_gitlens@3"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled","group":"2_gitlens@4"},{"command":"gitlens.stashSave","when":"gitlens:enabled","group":"3_gitlens@1"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.diffWithBranch","when":"gitlens:enabled","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled","group":"1_gitlens_1@1"},{"command":"gitlens.stashSave","when":"gitlens:enabled","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.showCommitSearch","when":"view =~ /^gitlens.gitExplorer:/","group":"navigation@1"},{"command":"gitlens.gitExplorer.undockHistory","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == history && !gitlens:historyExplorer","group":"navigation@2"},{"command":"gitlens.gitExplorer.switchToHistoryView","when":"view =~ /^gitlens.gitExplorer:/ && !gitlens:historyExplorer && gitlens:gitExplorer:view == repository","group":"navigation@3"},{"command":"gitlens.gitExplorer.switchToRepositoryView","when":"view =~ /^gitlens.gitExplorer:/ && !gitlens:historyExplorer && gitlens:gitExplorer:view == history","group":"navigation@3"},{"command":"gitlens.gitExplorer.refresh","when":"view =~ /^gitlens.gitExplorer:/","group":"navigation@8"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","when":"view =~ /^gitlens.gitExplorer:/ && config.gitlens.gitExplorer.autoRefresh && !gitlens:gitExplorer:autoRefresh","group":"2_gitlens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","when":"view =~ /^gitlens.gitExplorer:/ && config.gitlens.gitExplorer.autoRefresh && gitlens:gitExplorer:autoRefresh","group":"2_gitlens"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == history && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"2_gitlens_1"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","when":"view =~ /^gitlens.gitExplorer:/ && gitlens:gitExplorer:view == history && config.gitlens.advanced.fileHistoryFollowsRenames","group":"2_gitlens_1"},{"command":"gitlens.historyExplorer.refresh","when":"view =~ /^gitlens.historyExplorer:/","group":"navigation@1"},{"command":"gitlens.historyExplorer.dock","when":"view =~ /^gitlens.historyExplorer:/ && gitlens:gitExplorer","group":"navigation@9"},{"command":"gitlens.historyExplorer.close","when":"view =~ /^gitlens.historyExplorer:/ && !gitlens:gitExplorer","group":"navigation@9"},{"command":"gitlens.historyExplorer.setRenameFollowingOn","when":"view =~ /^gitlens.historyExplorer:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.historyExplorer.setRenameFollowingOff","when":"view =~ /^gitlens.historyExplorer:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.showCommitSearch","when":"view =~ /^gitlens.resultsExplorer:/","group":"navigation@1"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","when":"view =~ /^gitlens.resultsExplorer:/ && !gitlens:resultsExplorer:keepResults","group":"navigation@2"},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","when":"view =~ /^gitlens.resultsExplorer:/ && gitlens:resultsExplorer:keepResults","group":"navigation@2"},{"command":"gitlens.resultsExplorer.refresh","when":"view =~ /^gitlens.resultsExplorer:/","group":"navigation@3"},{"command":"gitlens.resultsExplorer.close","when":"view =~ /^gitlens.resultsExplorer:/","group":"navigation@9"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","when":"view =~ /^gitlens.resultsExplorer:/","group":"1_gitlens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","when":"view =~ /^gitlens.resultsExplorer:/","group":"1_gitlens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","when":"view =~ /^gitlens.resultsExplorer:/","group":"1_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem == gitlens:branches:remotes","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:(branch\\b(.*?:tracking|:remote))/","group":"1_gitlens@1"},{"command":"gitlens.explorers.compareWithRemote","when":"viewItem =~ /gitlens:(branch\\b.*?:tracking)/","group":"7_gitlens@1"},{"command":"gitlens.explorers.compareWithHead","when":"viewItem =~ /gitlens:(branch(?!:current)|commit|stash|tag)\\b/","group":"7_gitlens@2"},{"command":"gitlens.explorers.compareWithWorking","when":"viewItem =~ /gitlens:(branch(?!:current)|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.explorers.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch(?!:current)\\b/","group":"7_gitlens@4"},{"command":"gitlens.explorers.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag|file:)\\b/ && gitlens:explorers:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.explorers.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag|file:)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_diff@1"},{"command":"gitlens.explorers.terminalCheckoutBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","when":"viewItem =~ /gitlens:(branch:current:tracking|status:upstream)\\b/","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalMergeBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@2"},{"command":"gitlens.explorers.terminalRebaseBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@3"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@4"},{"command":"gitlens.explorers.terminalCreateBranch","when":"viewItem =~ /gitlens:(branch|commit|status:upstream|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.explorers.terminalDeleteBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@6"},{"command":"gitlens.explorers.terminalCreateTag","when":"viewItem =~ /gitlens:(branch|commit|status:upstream)\\b/","group":"8_gitlens@7"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.explorers.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.explorers.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.explorers.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file:commit)\\b/","group":"5_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.explorers.terminalCherryPickCommit","when":"viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalPushCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@2"},{"command":"gitlens.explorers.terminalRevertCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@3"},{"command":"gitlens.explorers.terminalCheckoutCommit","when":"viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@4"},{"command":"gitlens.explorers.terminalRebaseCommit","when":"viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@5"},{"command":"gitlens.explorers.terminalResetCommit","when":"viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@6"},{"command":"gitlens.explorers.openFile","when":"viewItem =~ /gitlens:file\\b/","group":"inline"},{"command":"gitlens.explorers.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.explorers.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.explorers.openFile","when":"viewItem =~ /gitlens:(file|history-file|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.explorers.openFileRevision","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.explorers.openFileRevisionInRemote","when":"viewItem == gitlens:file:commit && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history-file|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(history-file|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/ && gitlens:gitExplorer:view == repository","group":"8_gitlens@1"},{"command":"gitlens.showQuickCommitFileDetails","when":"viewItem =~ /gitlens:file\\b(?!:stash)/","group":"8_gitlens@2"},{"command":"gitlens.explorers.applyChanges","when":"viewItem =~ /gitlens:file:(commit|status)\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.explorers.applyChanges","when":"viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:status && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.explorers.closeRepository","when":"viewItem == gitlens:status","group":"8_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem == gitlens:remote","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:remote","group":"1_gitlens@2"},{"command":"gitlens.explorers.terminalRemoveRemote","when":"viewItem == gitlens:remote","group":"8_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:repository && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.explorers.closeRepository","when":"viewItem == gitlens:repository","group":"8_gitlens@1"},{"command":"gitlens.resultsExplorer.swapComparision","when":"viewItem == gitlens:results:comparison","group":"inline@1"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"viewItem =~ /gitlens:results\\b(?!:(commits|files))/","group":"inline@2"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"viewItem =~ /gitlens:results\\b(?!:(commits|files))/","group":"1_gitlens@1"},{"command":"gitlens.resultsExplorer.swapComparision","when":"viewItem == gitlens:results:comparison","group":"1_gitlens@2"},{"command":"gitlens.explorers.openDirectoryDiff","when":"viewItem == gitlens:results:comparison","group":"7_gitlens@1"},{"command":"gitlens.stashSave","when":"viewItem == gitlens:stashes","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.explorers.terminalDeleteTag","when":"viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.gitExplorer.refreshNode","when":"view =~ /^gitlens.gitExplorer:/ && viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"},{"command":"gitlens.resultsExplorer.refreshNode","when":"view =~ /^gitlens.resultsExplorer:/ && viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"},{"command":"gitlens.historyExplorer.refreshNode","when":"view =~ /^gitlens.historyExplorer:/ && viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"gitlens:keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"alt+,","when":"gitlens:keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+w","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"gitlens:keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"gitlens:keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+w","mac":"cmd+alt+g shift+w","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"gitlens:keymap == chorded && gitlens:enabled"}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.gitExplorer:gitlens","name":"Explorer","when":"gitlens:enabled && gitlens:gitExplorer == gitlens"},{"id":"gitlens.historyExplorer:gitlens","name":"File History","when":"gitlens:enabled && gitlens:historyExplorer == gitlens"},{"id":"gitlens.resultsExplorer:gitlens","name":"Results","when":"gitlens:enabled && gitlens:resultsExplorer == gitlens"}],"explorer":[{"id":"gitlens.gitExplorer:explorer","name":"GitLens","when":"gitlens:enabled && gitlens:gitExplorer == explorer"},{"id":"gitlens.historyExplorer:explorer","name":"GitLens File History","when":"gitlens:enabled && gitlens:historyExplorer == explorer"},{"id":"gitlens.resultsExplorer:explorer","name":"GitLens Results","when":"gitlens:enabled && gitlens:resultsExplorer == explorer"}],"scm":[{"id":"gitlens.gitExplorer:scm","name":"GitLens","when":"gitlens:enabled && gitlens:gitExplorer == scm"},{"id":"gitlens.historyExplorer:scm","name":"GitLens File History","when":"gitlens:enabled && gitlens:historyExplorer == scm"},{"id":"gitlens.resultsExplorer:scm","name":"GitLens Results","when":"gitlens:enabled && gitlens:resultsExplorer == scm"}]}},"scripts":{"build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf","lint":"tslint --project tsconfig.json && tslint --project ui.tsconfig.json","pack":"vsce package","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.ts\" && tslint --project tsconfig.json --fix && tslint --project ui.tsconfig.json --fix","pub":"vsce publish","rebuild":"npm run reset && npm run build","reset":"npm run clean && npm install --no-save","watch":"webpack --watch --env.development","ui:optimize":"webpack --config-name ui --env.optimizeImages","ui:watch":"webpack --watch --config-name ui --env.development","postinstall":"node ./node_modules/vscode/bin/install","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"clipboardy":"1.2.3","date-fns":"1.29.0","iconv-lite":"0.4.23","lodash.debounce":"4.0.8","lodash.once":"4.1.1","tmp":"0.0.33","tslib":"1.9.3"},"devDependencies":{"@types/clipboardy":"1.1.0","@types/node":"8.10.26","@types/tmp":"0.0.33","clean-webpack-plugin":"0.1.19","css-loader":"1.0.0","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","husky":"0.14.3","imagemin-webpack-plugin":"2.2.0","mini-css-extract-plugin":"0.4.1","node-sass":"4.9.3","prettier":"1.14.2","prettier-tslint":"0.4.0","sass-loader":"7.1.0","style-loader":"0.22.1","tslint":"5.11.0","tslint-loader":"3.6.0","tslint-prettiest":"0.0.1","ts-loader":"4.5.0","typescript":"3.0.1","vscode":"1.1.21","webpack":"4.16.5","webpack-cli":"3.1.0","webpack-deep-scope-plugin":"1.3.6","webpack-node-externals":"1.7.2"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/eamodio.gitlens-8.5.6","path":"/home/miltfra/.vscode/extensions/eamodio.gitlens-8.5.6","scheme":"file"}},{"name":"subliminal","displayName":"Subliminal","description":"An opinionated minimalistic VS Code theme for JavaScript inspired by Sublime Text Spacegray theme","license":"SEE LICENSE IN LICENSE","version":"1.0.0","publisher":"gaearon","preview":true,"engines":{"vscode":"^1.22.0"},"icon":"icon.png","keywords":["theme","minimal","oceanic","dark","sublime"],"repository":{"type":"git","url":"https://github.com/gaearon/subliminal.git"},"bugs":{"url":"https://github.com/gaearon/subliminal/issues"},"categories":["Themes"],"contributes":{"themes":[{"label":"Subliminal","uiTheme":"vs-dark","path":"./themes/Subliminal-color-theme.json"}]},"uuid":"06e5aaf2-85ae-4d7e-abe1-4d2975a80171","isBuiltin":false,"isUnderDevelopment":false,"id":"gaearon.subliminal","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/gaearon.subliminal-1.0.0","path":"/home/miltfra/.vscode/extensions/gaearon.subliminal-1.0.0","scheme":"file"}},{"name":"beautify","displayName":"Beautify","description":"Beautify code in place for VS Code","version":"1.4.7","publisher":"HookyQR","engines":{"vscode":"^1.22.0"},"categories":["Other","Programming Languages","Formatters"],"activationEvents":["*"],"icon":"icon.png","galleryBanner":{"color":"#e8e030","theme":"light"},"license":"MIT","main":"/home/miltfra/.vscode/extensions/hookyqr.beautify-1.4.7/extension","contributes":{"languages":[{"id":"json","aliases":["JSON"],"filenames":[".jsbeautifyrc",".jshintrc"]}],"jsonValidation":[{"fileMatch":".jsbeautifyrc","url":"./schema/beautifyrc.json"}],"commands":[{"command":"HookyQR.beautify","title":"Beautify selection"},{"command":"HookyQR.beautifyFile","title":"Beautify file"}],"configuration":{"type":"object","title":"Beautify config","properties":{"beautify.ignore":{"type":["string","array"],"items":{"type":"string"},"default":[],"description":"List of paths to ignore when using VS Code format command, including format on save. Uses glob pattern matching."},"beautify.config":{"type":["string","object","null"],"default":null,"description":"A path to a file, or an object containing the configuration options for js-beautify. If the .jsbeautifyrc file exists in project root, it overrides this configuration."},"beautify.language":{"type":"object","description":"Link file types to the beautifier type","default":{"js":{"type":["javascript","json","jsonc"],"filename":[".jshintrc",".jsbeautifyrc"]},"css":["css","scss"],"html":["htm","html"]},"properties":{"js":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"css":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"html":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}}}}}}},"dependencies":{"editorconfig":"0.15.0","js-beautify":"^1.8.8","minimatch":"^3.0.4"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.36","expect.js":"^0.3.1","mocha":"^5.2.0","typescript":"^2.6.1","vscode":"~1.1.18"},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"repository":{"type":"git","url":"https://github.com/HookyQR/VSCodeBeautify"},"bugs":{"url":"https://github.com/HookyQR/VSCodeBeautify/issues"},"uuid":"697255a9-3f36-44c8-b084-d3b91edfb23a","isBuiltin":false,"isUnderDevelopment":false,"id":"HookyQR.beautify","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/hookyqr.beautify-1.4.7","path":"/home/miltfra/.vscode/extensions/hookyqr.beautify-1.4.7","scheme":"file"}},{"name":"latex-workshop","displayName":"LaTeX","description":"Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.","icon":"icon.png","version":"5.16.0","publisher":"James-Yu","license":"MIT","homepage":"https://github.com/James-Yu/LaTeX-Workshop","repository":{"type":"git","url":"https://github.com/James-Yu/LaTeX-Workshop.git"},"engines":{"vscode":"^1.27.0"},"categories":["Programming Languages","Snippets"],"keywords":["latex","tex","compile","preview","hint"],"activationEvents":["onLanguage:tex","onLanguage:latex","onLanguage:doctex","onLanguage:pdf","onCommand:latex-workshop.build","onCommand:latex-workshop.recipes","onCommand:latex-workshop.view","onCommand:latex-workshop.tab","onCommand:latex-workshop.synctex","onCommand:latex-workshop.clean","onCommand:latex-workshop.citation","onCommand:latex-workshop.wordcount","onCommand:latex-workshop.compilerlog","onCommand:latex-workshop.log","onCommand:latex-workshop.actions"],"main":"/home/miltfra/.vscode/extensions/james-yu.latex-workshop-5.16.0/out/src/main.js","contributes":{"languages":[{"id":"tex","aliases":["TeX","tex"],"extensions":[".sty",".cls",".bbx",".cbx",".ltx"],"configuration":"./syntax/syntax.json"},{"id":"doctex","aliases":["DocTeX","doctex"],"extensions":[".dtx"],"configuration":"./syntax/syntax-doctex.json"},{"id":"latex","aliases":["LaTeX","latex"],"extensions":[".tex"],"configuration":"./syntax/syntax.json"},{"id":"bibtex","aliases":["BibTeX","bibtex"],"extensions":[".bib"]},{"id":"latex-expl3","aliases":["LaTeX Expl3"],"configuration":"./syntax/syntax.json"},{"id":"pdf","aliases":["Plain Text (PDF)","pdf"],"extensions":[".pdf"]}],"grammars":[{"language":"tex","scopeName":"text.tex","path":"./syntax/TeX.plist"},{"language":"doctex","scopeName":"text.tex.doctex","path":"./syntax/DocTeX.plist"},{"language":"latex","scopeName":"text.tex.latex","path":"./syntax/LaTeX.plist","embeddedLanguages":{"source.asymptote":"asymptote","source.cpp":"cpp","source.css":"css","source.dot":"dot","source.gnuplot":"gnuplot","text.html":"html","source.java":"java","source.js":"js","source.lua":"lua","source.python":"python","text.xtml":"xtml","source.yaml":"yaml"}},{"language":"bibtex","scopeName":"text.bibtex","path":"./syntax/Bibtex.plist"},{"language":"latex-expl3","scopeName":"text.tex.latex.expl3","path":"./syntax/LaTeX Expl3.plist"},{"scopeName":"markdown.latex.codeblock","path":"./syntax/latexblock.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.latex":"latex"}}],"snippets":[{"language":"latex","path":"./snippets/latex.json"}],"commands":[{"command":"latex-workshop.navigate-envpair","title":"Navigate to matching begin/end","category":"LaTeX Workshop"},{"command":"latex-workshop.select-envname","title":"Select the current environment name","category":"LaTeX Workshop"},{"command":"latex-workshop.multicursor-envname","title":"Add a multicursor to the current environment name","category":"LaTeX Workshop"},{"command":"latex-workshop.wrap-env","title":"Surround/wrap selection with \\begin{}...\\end{}","category":"LaTeX Workshop"},{"command":"latex-workshop.close-env","title":"Close current environment","category":"LaTeX Workshop"},{"command":"latex-workshop.build","title":"Build LaTeX project","category":"LaTeX Workshop"},{"command":"latex-workshop.recipes","title":"Build with recipe","category":"LaTeX Workshop"},{"command":"latex-workshop.view","title":"View LaTeX PDF file","category":"LaTeX Workshop","icon":{"light":"icons/view-pdf-light.svg","dark":"icons/view-pdf-dark.svg"}},{"command":"latex-workshop.tab","title":"View LaTeX PDF file in VSCode tab","category":"LaTeX Workshop"},{"command":"latex-workshop.kill","title":"Kill LaTeX compiler process","category":"LaTeX Workshop"},{"command":"latex-workshop.synctex","title":"SyncTeX from cursor","category":"LaTeX Workshop"},{"command":"latex-workshop.clean","title":"Clean up auxiliary files","category":"LaTeX Workshop"},{"command":"latex-workshop.citation","title":"Open citation browser","category":"LaTeX Workshop"},{"command":"latex-workshop.addtexroot","title":"Insert %!TeX root magic comment","category":"LaTeX Workshop"},{"command":"latex-workshop.wordcount","title":"Count words in LaTeX document","category":"LaTeX Workshop"},{"command":"latex-workshop.log","title":"Show LaTeX Workshop messages","category":"LaTeX Workshop"},{"command":"latex-workshop.actions","title":"LaTeX actions","category":"LaTeX Workshop"},{"command":"latex-workshop-dev.parselog","title":"Parse current document as LaTeX logs","category":"LaTeX Workshop DevTools"}],"keybindings":[{"key":"ctrl+alt+b","mac":"cmd+alt+b","command":"latex-workshop.build","when":"editorTextFocus && !latex-workshop:altkeymap"},{"key":"ctrl+alt+c","mac":"cmd+alt+c","command":"latex-workshop.clean","when":"editorTextFocus && !latex-workshop:altkeymap"},{"key":"ctrl+alt+v","mac":"cmd+alt+v","command":"latex-workshop.view","when":"editorTextFocus && !latex-workshop:altkeymap"},{"key":"ctrl+alt+j","mac":"cmd+alt+j","command":"latex-workshop.synctex","when":"editorTextFocus && !latex-workshop:altkeymap"},{"key":"ctrl+alt+x","mac":"cmd+alt+x","command":"workbench.view.extension.latex","when":"editorTextFocus && !latex-workshop:altkeymap"},{"key":"ctrl+l alt+b","mac":"cmd+l alt+b","command":"latex-workshop.build","when":"editorTextFocus && latex-workshop:altkeymap"},{"key":"ctrl+l alt+c","mac":"cmd+l alt+c","command":"latex-workshop.clean","when":"editorTextFocus && latex-workshop:altkeymap"},{"key":"ctrl+l alt+v","mac":"cmd+l alt+v","command":"latex-workshop.view","when":"editorTextFocus && latex-workshop:altkeymap"},{"key":"ctrl+l alt+j","mac":"cmd+l alt+j","command":"latex-workshop.synctex","when":"editorTextFocus && latex-workshop:altkeymap"},{"key":"ctrl+l alt+x","mac":"cmd+l alt+x","command":"workbench.view.extension.latex","when":"editorTextFocus && latex-workshop:altkeymap"},{"key":"ctrl+l ctrl+enter","mac":"cmd+l cmd+enter","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.item"},{"key":"ctrl+l ctrl+b","mac":"cmd+l cmd+b","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textbf"},{"key":"ctrl+l ctrl+i","mac":"cmd+l cmd+i","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textit"},{"key":"ctrl+l ctrl+u","mac":"cmd+l cmd+u","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.underline"},{"key":"ctrl+l ctrl+e","mac":"cmd+l cmd+e","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.emph"},{"key":"ctrl+l ctrl+r","mac":"cmd+l cmd+r","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textrm"},{"key":"ctrl+l ctrl+t","mac":"cmd+l cmd+t","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.texttt"},{"key":"ctrl+l ctrl+s","mac":"cmd+l cmd+s","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textsl"},{"key":"ctrl+l ctrl+c","mac":"cmd+l cmd+c","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textsc"},{"key":"ctrl+l ctrl+n","mac":"cmd+l cmd+n","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textnormal"},{"key":"ctrl+l ctrl+6","mac":"cmd+l cmd+6","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textsuperscript"},{"key":"ctrl+l ctrl+oem_minus","mac":"cmd+l cmd+oem_minus","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.textsubscript"},{"key":"ctrl+m ctrl+b","mac":"cmd+m cmd+b","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathbf"},{"key":"ctrl+m ctrl+i","mac":"cmd+m cmd+i","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathit"},{"key":"ctrl+m ctrl+r","mac":"cmd+m cmd+r","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathrm"},{"key":"ctrl+m ctrl+t","mac":"cmd+m cmd+t","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathtt"},{"key":"ctrl+m ctrl+s","mac":"cmd+m cmd+s","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathsf"},{"key":"ctrl+m ctrl+shift+b","mac":"cmd+m cmd+shift+b","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathbb"},{"key":"ctrl+m ctrl+c","mac":"cmd+m cmd+c","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex'","command":"latex-workshop.shortcut.mathcal"},{"key":"ctrl+l ctrl+w","mac":"cmd+l cmd+w","when":"editorTextFocus && !editorReadonly && editorHasSelection && editorLangId == 'latex'","command":"latex-workshop.surround"},{"command":"latex-workshop.onEnterKey","key":"enter","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex' && !suggestWidgetVisible &&  vim.active && vim.mode == 'Insert'"},{"command":"latex-workshop.onEnterKey","key":"enter","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex' && !suggestWidgetVisible &&  !vim.active"},{"command":"latex-workshop.onAltEnterKey","key":"alt+enter","when":"editorTextFocus && !editorReadonly && editorLangId == 'latex' && !suggestWidgetVisible"}],"configurationDefaults":{"[latex]":{"editor.formatOnPaste":false,"editor.formatOnSave":false}},"configuration":{"type":"object","title":"LaTeX","properties":{"latex-workshop.latex.recipes":{"type":"array","default":[{"name":"latexmk","tools":["latexmk"]},{"name":"pdflatex -> bibtex -> pdflatex*2","tools":["pdflatex","bibtex","pdflatex","pdflatex"]}],"markdownDescription":"Define LaTeX compiling recipes.\nEach recipe in the list is an object declares its name and the names of tools to be used sequentially, which are defined in `latex-workshop.latex.tools`.\nBy default, the first recipe is used to compile the project. For details, please visit https://github.com/James-Yu/LaTeX-Workshop#recipe."},"latex-workshop.latex.tools":{"type":"array","default":[{"name":"latexmk","command":"latexmk","args":["-synctex=1","-interaction=nonstopmode","-file-line-error","-pdf","%DOC%"]},{"name":"pdflatex","command":"pdflatex","args":["-synctex=1","-interaction=nonstopmode","-file-line-error","%DOC%"]},{"name":"bibtex","command":"bibtex","args":["%DOCFILE%"]}],"markdownDescription":"Define LaTeX compiling tools to be used in recipes.\nEach tool is labeled by its `name`. When invoked, `command` is spawned with arguments defined in `args`. Typically no spaces should appear in each argument unless in paths.\nPlaceholder `%DOC%`, `%DOCFILE`, `%DIR%`, and `%TMPDIR%` is available. For details, please visit https://github.com/James-Yu/LaTeX-Workshop#recipe."},"latex-workshop.latex.magic.args":{"type":"array","default":["-synctex=1","-interaction=nonstopmode","-file-line-error","%DOC%"],"markdownDescription":"Define the arguments to be input to magic command executable."},"latex-workshop.latex.magic.bib.args":{"type":"array","default":["%DOCFILE%"],"markdownDescription":"Define the arguments to be input to BIB magic command executable."},"latex-workshop.latex.outputDir":{"type":"string","default":"./","markdownDescription":"The directory where the extension tries to find project files (e.g., PDF and SyncTeX files) are located.\nBoth relative and absolute paths are supported. Relative path start from the root file location, so beware if it is located in sub-directory.\nThe LaTeX toolchain should output files to this path."},"latex-workshop.latex.additionalBib":{"type":"array","default":[],"markdownDescription":"Addition bibliography files to watch.\nBoth relative and absolute paths/globs are supported, but absolute ones are suggested. Relative path start from the root file location, so be ware if it is located in sub-directory."},"latex-workshop.latex.autoBuild.onSave.enabled":{"type":"boolean","default":true,"markdownDescription":"Build LaTeX after saving LaTeX source file.\nThis property defines whether LaTeX Workshop will execute the LaTeX toolchain command(s) to build the project after new LaTeX contents are saved."},"latex-workshop.latex.autoBuild.onTexChange.enabled":{"type":"boolean","default":false,"markdownDescription":"Build LaTeX after a LaTeX source file has changed in the workspace.\nThis property defines whether LaTeX Workshop will execute the LaTeX toolchain command(s) to build the project after any LaTeX file in the workspace is saved on the disk which is not open in the active editor window."},"latex-workshop.latex.autoBuild.cleanAndRetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Delete LaTeX auxillary files when errors occur during build and retry.\nThis property defines whether LaTeX Workshop will try to clean and build the project once again after errors happen in the build toolchain."},"latex-workshop.latex.clean.enabled":{"type":"boolean","default":false,"markdownDescription":"Delete LaTeX auxillary files after building project.\nThis property defines whether LaTeX Workshop will clean up all unnecessary files after building the project."},"latex-workshop.latex.clean.onFailBuild.enabled":{"type":"boolean","default":false,"markdownDescription":"Delete LaTeX auxillary files after a failed building process.\nThis property defines whether LaTeX Workshop will clean up all unnecessary files upon building errors."},"latex-workshop.latex.clean.fileTypes":{"type":"array","default":["*.aux","*.bbl","*.blg","*.idx","*.ind","*.lof","*.lot","*.out","*.toc","*.acn","*.acr","*.alg","*.glg","*.glo","*.gls","*.ist","*.fls","*.log","*.fdb_latexmk"],"markdownDescription":"Files to clean.\nThis property must be an array of strings. File globs such as *.removeme, something?.aux can be used."},"latex-workshop.latex.option.maxPrintLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Add `--max-print-line` option to LaTeX build commands. This flag tells some MikTeX compilers to produce non hard wrapped log messages. Non hard wrapped log messages are required for the _Problem_ Pane to properly display messages."},"latex-workshop.view.outline.sections":{"type":"array","default":["chapter","section","subsection","subsubsection"],"markdownDescription":"The section names of LaTeX outline hierarchy.\nThis property is an array of case-sensitive strings in the order of document structure hierarchy. For multiple tags in the same level, separate the tags with `|` as delimiters, e.g., `section|alternative`."},"latex-workshop.view.pdf.viewer":{"type":"string","default":"none","enum":["none","browser","tab","external"],"markdownDescription":"The default PDF viewer.","enumDescriptions":["Undetermined viewer. A viewer selector will pop up upon viewing PDF.","Open PDF with the default web browser.","Open PDF with the built-in tab viewer.","[Experimental] Open PDF with the external viewer set in \"View > Pdf > External: command\"."]},"latex-workshop.view.pdf.ref.viewer":{"type":"string","default":"auto","enum":["auto","tabOrBrowser","external"],"markdownDescription":"PDF viewer used for [View on PDF] link on \\ref."},"latex-workshop.view.pdf.external.command":{"type":"object","default":{"command":"SumatraPDF.exe","args":["%PDF%"]},"markdownDescription":"The command to execute when using external viewer.\nThis function is not officially supported. %PDF% is the placeholder for the absolute path to the generated PDF file."},"latex-workshop.view.pdf.external.synctex":{"type":"object","default":{"command":"SumatraPDF.exe","args":["%LINE%","%PDF%","%TEX%"]},"markdownDescription":"The command to execute when forward synctex to external viewer.\nThis function is not officially supported. %LINE% is the line number, %PDF% is the placeholder for the absolute path to the generated PDF file, and %TEX% is the source LaTeX file path with `.tex` extension from which syncTeX is fired."},"latex-workshop.view.pdf.zoom":{"type":"string","default":"auto","markdownDescription":"The default zoom level of the PDF viewer.\nThis default value will be passed to the viewer upon opening. Possible values are `auto`, `page-actual`, `page-fit`, `page-width`, and one-based scale values (e.g., 0.5 for 50%, 2.0 for 200%)."},"latex-workshop.view.pdf.scrollMode":{"type":"number","default":0,"markdownDescription":"The default scroll mode of the PDF viewer.\nThis default value will be passed to the viewer upon opening. Possible values are `0` (vertical), `1`(horizontal) and `2` (wrapped)."},"latex-workshop.view.pdf.spreadMode":{"type":"number","default":0,"markdownDescription":"The default spread mode of the PDF viewer.\nThis default value will be passed to the viewer upon opening. Possible values are `0` (none), `1` (odd) and `2` (even)."},"latex-workshop.view.pdf.hand":{"type":"boolean","default":false,"markdownDescription":"Define if the hand tool is enabled by default in the PDF viewer."},"latex-workshop.view.pdf.invert":{"type":"number","default":0,"markdownDescription":"Define the CSS invert filter level of the PDF viewer.\nThis config can invert the color of PDF. Possible values are from 0 to 1."},"latex-workshop.synctex.path":{"type":"string","default":"synctex","markdownDescription":"Define the location of SyncTeX executive file.\nAdditional arguments, e.g., synctex modes and position of click, will be appended to this command."},"latex-workshop.synctex.afterBuild.enabled":{"type":"boolean","default":false,"markdownDescription":"Execute forward synctex at cursor position after compiling LaTeX project."},"latex-workshop.chktex.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable linting LaTeX with ChkTeX.\nThe active document will be linted when no document changes for a defined period of time.\nThe full project will be linted from the root on file save."},"latex-workshop.chktex.path":{"type":"string","default":"chktex","markdownDescription":"Define the location of ChkTeX executive file.\nThis command will be joint with `latex-workshop.chktex.args.*` and required arguments to form a complete command of ChkTeX."},"latex-workshop.chktex.args.active":{"type":"array","default":["-wall","-n22","-n30","-e16","-q"],"markdownDescription":"Linter arguments to check LaTeX syntax of the current file state in real time with ChkTeX.\nArguments must be in separate strings in the array. Additional arguments, i.e., `-I0 -f%f:%l:%c:%d:%k:%n:%m\\n` will be appended when constructing the command. Current file contents will be piped to the command through stdin."},"latex-workshop.chktex.args.root":{"type":"array","default":["-wall","-n22","-n30","-e16","-q"],"markdownDescription":"Linter arguments to check LaTeX syntax of the entire project from the root file with ChkTeX.\nArguments must be in separate strings in the array. Additional arguments, i.e., `-f%f:%l:%c:%d:%k:%n:%m\\n %DOC%` will be appended when constructing the command."},"latex-workshop.chktex.interval":{"type":"number","default":300,"markdownDescription":"Defines the time interval in milliseconds between invoking LaTeX linter on the active file."},"latex-workshop.texcount.path":{"type":"string","default":"texcount","markdownDescription":"Define the location of TeXCount executive file/script.\nThis command will be joint with `latex-workshop.texcount.args` and required arguments to form a complete command of TeXCount."},"latex-workshop.texcount.args":{"type":"array","default":[],"markdownDescription":"TeXCount arguments to count words in LaTeX document of the entire project from the root file, or the current document.\nArguments must be in separate strings in the array. Additional arguments, i.e., `-merge %DOC%` for the project and the current document path for counting current file will be appended when constructing the command."},"latex-workshop.intellisense.citation.type":{"type":"string","enum":["inline","browser"],"default":"inline","markdownDescription":"Defines which type of hint to show when intellisense provides citation suggestions.","enumDescriptions":["Use the inline intellisense to provide citation completion items.","Use a dropdown menu to provide citation completion items."]},"latex-workshop.intellisense.citation.label":{"type":"string","enum":["bibtex key","title","authors"],"default":"bibtex key","markdownDescription":"Defines what to show as suggestion labels when intellisense provides citation suggestions.","enumDescriptions":["Show bibtex keys in the inline intellisense.","Show publication titles in the inline intellisense.","Show publication authors in the inline intellisense."]},"latex-workshop.intellisense.citation.maxfilesizeMB":{"type":"number","default":5,"markdownDescription":"Defines the maximum bibtex file size for the extension to parse in MB."},"latex-workshop.intellisense.surroundCommand.enabled":{"type":"boolean","default":false,"markdownDescription":"When `\\` is typed with text selected, surround the selection with LaTeX command."},"latex-workshop.message.badbox.show":{"type":"boolean","default":true,"markdownDescription":"Show badbox information in the problems panel."},"latex-workshop.message.latexlog.exclude":{"type":"array","default":[],"markdownDescription":"Exclude log messages that matches the given regexp from the problems panel."},"latex-workshop.message.information.show":{"type":"boolean","default":false,"markdownDescription":"Display information messages in popup notifications."},"latex-workshop.message.warning.show":{"type":"boolean","default":true,"markdownDescription":"Display warning messages in popup notifications."},"latex-workshop.message.error.show":{"type":"boolean","default":true,"markdownDescription":"Display error messages in popup notifications."},"latex-workshop.message.update.show":{"type":"boolean","default":true,"markdownDescription":"Display LaTeX Workshop update message on new versions."},"latex-workshop.message.log.show":{"type":"boolean","default":true,"markdownDescription":"Display LaTeX Workshop debug log in output panel.\nThis property defines whether LaTeX Workshop will output its debug log to the log panel."},"latex-workshop.latexindent.path":{"type":"string","default":"latexindent","markdownDescription":"Define the location of the latexindent executable file."},"latex-workshop.latexindent.args":{"type":"array","default":["-c","%DIR%/","%TMPFILE%","-y=\"defaultIndent: '%INDENT%'\""],"markdownDescription":"Define the command line arguments for latexindent. Available placeholders:\n- %DOC%, %DOCFILE%, %DIR%: same as latex-workshop.latex.toolchain args.\n- %TMPFILE%: would be replaced with the path of file which contains raw TeX source to be formatted. At this moment you need to use it as an input file of `latexindent`.\n- %INDENT%: would be replaced with the string which represents indent of the target document.\n\nNote: At this moment -c option requires trailing slash."},"latex-workshop.docker.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable docker-based LaTeX distribution support.\nDo not set this item to `true` unless you are aware of what it means.\nThis extension will use the images defined in `latex-workshop.docker.image.latex` to execute `latexmk`, `synctex`, `texcount`, and `latexindent`."},"latex-workshop.docker.image.latex":{"type":"string","default":"tianon/latex","markdownDescription":"Define the image for `latexmk`, `synctex`, `texcount`, and `latexindent`."},"latex-workshop.showContextMenu":{"type":"boolean","default":false,"markdownDescription":"Enable the LaTeX contextual menu. This menu is deactived as it is available through the new LaTeX badge. Just set this variable to `true` to recover the menu."},"latex-workshop.bind.enter.key":{"type":"boolean","default":true,"markdownDescription":"Enable the automatic insertion of `\\item` on a newline when pressing `Enter` in a line starting in `\\item`."},"latex-workshop.bind.altKeymap.enabled":{"type":"boolean","default":false,"markdownDescription":"Use alternative keymap combo, i.e., `ctrl`+`l` `alt`+key, to replace the default `ctrl`/`cmd`+`alt` shortcuts.\nReload vscode to make this configuration effective."},"latex-workshop.hoverPreview.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable Hover Preview."},"latex-workshop.hoverPreview.scale":{"type":"number","default":1,"markdownDescription":"Scaling of Hover Preview."},"latex-workshop.hoverPreview.cursor.enabled":{"type":"boolean","default":true,"markdownDescription":"Render cursor in Hover Preview at the current position."},"latex-workshop.hoverPreview.cursor.symbol":{"type":"string","default":"\\ddagger","markdownDescription":"Cursor symbol in Hover Preview."},"latex-workshop.hoverPreview.cursor.color":{"type":"string","default":"auto","enum":["auto","black","blue","brown","cyan","darkgray","gray","green","lightgray","lime","magenta","olive","orange","pink","purple","red","teal","violet","white","yellow"],"markdownDescription":"The color of cursor in Hover Preview."}}},"menus":{"editor/context":[{"when":"config.latex-workshop.showContextMenu && editorLangId == latex","command":"latex-workshop.build","group":"navigation@100"},{"when":"config.latex-workshop.showContextMenu && editorLangId == latex","command":"latex-workshop.synctex","group":"navigation@101"},{"when":"config.latex-workshop.showContextMenu && editorLangId == latex","command":"latex-workshop.actions","group":"navigation@102"}],"editor/title":[{"when":"editorLangId == latex","command":"latex-workshop.view","group":"navigation"}]},"viewsContainers":{"activitybar":[{"id":"latex","title":"LaTeX","icon":"./icons/activity-bar.svg"}]},"views":{"latex":[{"id":"latex-commands","name":"Commands","when":"latex-workshop:enabled"},{"id":"latex-structure","name":"Structure","when":"latex-workshop:enabled"}]}},"scripts":{"vscode:prepublish":"sh minify.sh && rm -rf out/ && webpack --mode production","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"capabilities":{"completionProvider":{"resolveProvider":"true"},"hoverProvider":"true","definitionProvider":"true","documentSymbolProvider":"true","workspaceSymbolProvider":"true"},"dependencies":{"chokidar":"^2.0.3","fs-extra":"^5.0.0","glob":"^7.1.1","mathjax":"2.7.5","mathjax-node":"2.1.1","micromatch":"^3.0.0","pdfjs-dist":"^2.0.943","strip-json-comments":"^2.0.1","tmp":"^0.0.33","ws":"^5.1.1"},"devDependencies":{"@types/chokidar":"^1.6.0","@types/fs-extra":"^5.0.0","@types/glob":"^5.0.30","@types/micromatch":"^3.0.0","@types/node":"^7.0.59","@types/tmp":"^0.0.33","@types/ws":"^4.0.2","ts-loader":"^5.2.1","tslint":"^5.0.0","typescript":"^2.0.3","vscode":"^1.1.14","webpack":"^4.20.2","webpack-cli":"^3.1.2"},"uuid":"61d03280-3919-4dd1-bce1-178ca21fdeaf","isBuiltin":false,"isUnderDevelopment":false,"id":"James-Yu.latex-workshop","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/james-yu.latex-workshop-5.16.0","path":"/home/miltfra/.vscode/extensions/james-yu.latex-workshop-5.16.0","scheme":"file"}},{"name":"lucy-vscode","displayName":"Lucy Theme","description":"🌃 Easy on the eyes.","version":"2.6.3","publisher":"juliettepretot","repository":"https://github.com/juliettepretot/lucy-vscode","scripts":{"build":"node --experimental-modules src/index.mjs","release":"npm version patch & vsce publish && npm publish && git push"},"engines":{"vscode":"^1.26.0"},"categories":["Themes"],"icon":"static/icon.png","contributes":{"themes":[{"label":"lucy","uiTheme":"vs-dark","path":"./dist/color-theme.json"}]},"tags":["femme","feminine","clear","pink","dark theme","color-theme","monokai","cute"],"devDependencies":{"clean-slate-lint":"^1.0.9"},"husky":{"hooks":{"pre-commit":"./node_modules/.bin/clean-slate-lint","pre-rewrite":"./node_modules/.bin/clean-slate-lint"}},"uuid":"633db44e-aa2a-4076-9b80-fb54ac7980cb","isBuiltin":false,"isUnderDevelopment":false,"id":"juliettepretot.lucy-vscode","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/juliettepretot.lucy-vscode-2.6.3","path":"/home/miltfra/.vscode/extensions/juliettepretot.lucy-vscode-2.6.3","scheme":"file"}},{"name":"vscode-dashboard","displayName":"Dashboard","description":"Organize your workspaces in a speed-dial manner.","version":"1.1.0","publisher":"kruemelkatze","icon":"media/extension_icon.png","engines":{"vscode":"^1.26.0"},"categories":["Other"],"activationEvents":["*"],"main":"/home/miltfra/.vscode/extensions/kruemelkatze.vscode-dashboard-1.1.0/out/dashboard","repository":{"type":"git","url":"https://github.com/Kruemelkatze/vscode-dashboard.git"},"contributes":{"commands":[{"command":"dashboard.open","title":"Dashboard: Open"},{"command":"dashboard.addProject","title":"Dashboard: Add Project"},{"command":"dashboard.removeProject","title":"Dashboard: Remove Project"},{"command":"dashboard.editProjects","title":"Dashboard: Edit Projects"}],"keybindings":[{"command":"dashboard.open","key":"ctrl+f1","mac":"cmd+f1"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.9.5","gulp":"^4.0.0","gulp-sass":"^4.0.1","node-sass":"^4.9.3","tslint":"^5.8.0","typescript":"^2.6.1","vscode":"^1.1.6"},"dependencies":{"fitty":"^2.2.6","mkdirp":"^0.5.1"},"uuid":"7e9bd4ed-7309-4a08-9887-cc57b08c5aae","isBuiltin":false,"isUnderDevelopment":false,"id":"kruemelkatze.vscode-dashboard","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/kruemelkatze.vscode-dashboard-1.1.0","path":"/home/miltfra/.vscode/extensions/kruemelkatze.vscode-dashboard-1.1.0","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, code formatting, refactoring, unit tests, snippets, and more.","version":"2018.10.1","languageServerVersion":"0.1.60","publisher":"ms-python","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","badges":[{"url":"https://vscode-python.visualstudio.com/VSCode-Python/_apis/build/status/VSCode-Python-Rolling-CI?branchName=master","href":"https://vscode-python.visualstudio.com/VSCode-Python/VSCode-Python%20Team/_build/index?context=allDefinitions&path=&definitionId=9","description":"Continuous integration (VSTS)"},{"url":"https://travis-ci.org/Microsoft/vscode-python.svg?branch=master","href":"https://travis-ci.org/Microsoft/vscode-python","description":"Continuous integration (Travis)"},{"url":"https://codecov.io/gh/Microsoft/vscode-python/branch/master/graph/badge.svg","href":"https://codecov.io/gh/Microsoft/vscode-python","description":"Test coverage"}],"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.26.0"},"recommendations":["donjayamanne.jupyter"],"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onDebugResolve:python","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewTestOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.updateSparkLibrary","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.datascience.showhistorypane","onCommand:python.datascience.importnotebook"],"main":"/home/miltfra/.vscode/extensions/ms-python.python-2018.10.1/out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.hascodecells"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorFocus && python.datascience.hascodecells && python.datascience.featureenabled"}],"commands":[{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.runtests","title":"Run All Unit Tests","category":"Python"},{"command":"python.debugtests","title":"Debug All Unit Tests","category":"Python"},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.updateSparkLibrary","title":"Update Workspace PySpark Libraries","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Unit Test Output","category":"Python"},{"command":"python.selectAndRunTestMethod","title":"Run Unit Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Unit Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Unit Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Unit Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Unit Tests","category":"Python"},{"command":"python.discoverTests","title":"Discover Unit Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Pane","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcell","group":"Python"},{"when":"python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcelladvance","group":"Python"},{"when":"resourceLangId == jupyter && python.datascience.featureenabled","command":"python.datascience.importnotebook","group":"Python"}],"explorer/context":[{"when":"resourceLangId == python","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebook","group":"Python"}],"commandPalette":[{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Pane","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"}]},"debuggers":[{"type":"python","label":"Python","languages":["python"],"enableBreakpointsFor":{"languageIds":["python","html","jinja"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","program":"./out/client/debugger/debugAdapter/main.js","runtime":"node","configurationSnippets":[{"label":"Python: Terminal (integrated)","description":"Debug a Python program with Integrated Terminal/Console","body":{"name":"Python: Terminal (integrated)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"integratedTerminal"}},{"label":"Python: Terminal (external)","description":"Debug a Python program with External Terminal/Console","body":{"name":"Python: Terminal (external)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"externalTerminal"}},{"label":"Python: Module","description":"Debug a Python Module","body":{"name":"Python: Module","type":"python","request":"launch","module":"enter-your-module-name-here","console":"integratedTerminal"}},{"label":"Python: Django","description":"Debug a Django Application","body":{"name":"Django","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/manage.py\"","args":["runserver","--noreload","--nothreading"],"django":true}},{"label":"Python: Flask","description":"Debug a Flask Application","body":{"name":"Flask","type":"python","request":"launch","module":"flask","env":{"FLASK_APP":"app.py","FLASK_ENV":"development","FLASK_DEBUG":"0"},"args":["run","--no-debugger","--no-reload"],"jinja":true}},{"label":"Python: Gevent","description":"Debug a Gevent Application","body":{"name":"Gevent","type":"python","request":"launch","program":"^\"\\${file}\"","gevent":true}},{"label":"Python: PySpark","description":"Debug PySpark","body":{"name":"PySpark","type":"python","request":"launch","osx":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"windows":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit.cmd\""},"linux":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"program":"^\"\\${file}\""}},{"label":"Python: Watson","description":"Debug a Watson Application","body":{"name":"Watson","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/console.py\"","args":["dev","runserver","--noreload=True"],"jinja":true}},{"label":"Python: Scrapy","description":"Scrapy with Integrated Terminal/Console","body":{"name":"Scrapy","type":"python","request":"launch","module":"scrapy","args":["crawl","specs","-o","bikes.json"]}},{"label":"Python: Pyramid","description":"Debug a Pyramid Application","body":{"name":"Pyramid","type":"python","request":"launch","args":["^\"\\${workspaceFolder}/development.ini\""],"pyramid":true,"jinja":true}},{"label":"Python: Attach","description":"Attach the Debugger for Remote Debugging","body":{"name":"Attach (Remote Debug)","type":"python","request":"attach","port":5678,"host":"localhost"}}],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}}},"initialConfigurations":[{"name":"Python: Current File (Integrated Terminal)","type":"python","request":"launch","program":"${file}","console":"integratedTerminal"},{"name":"Python: Attach","type":"python","request":"attach","port":5678,"host":"localhost"},{"name":"Python: Module","type":"python","request":"launch","module":"enter-your-module-name-here","console":"integratedTerminal"},{"name":"Python: Django","type":"python","request":"launch","program":"${workspaceFolder}/manage.py","console":"integratedTerminal","args":["runserver","--noreload","--nothreading"],"django":true},{"name":"Python: Flask","type":"python","request":"launch","module":"flask","env":{"FLASK_APP":"app.py"},"args":["run","--no-debugger","--no-reload"],"jinja":true},{"name":"Python: Current File (External Terminal)","type":"python","request":"launch","program":"${file}","console":"externalTerminal"}]}],"configuration":{"type":"object","title":"Python Configuration","properties":{"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediEnabled":{"type":"boolean","default":true,"description":"Enables Jedi as IntelliSense engine instead of Microsoft Python Analysis Engine.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.analysis.openFilesOnly":{"type":"boolean","default":true,"description":"Only show errors and warnings for open files rather than for the entire workspace.","scope":"resource"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pep8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Pep8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Pep8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pep8","scope":"resource"},"python.linting.pep8Path":{"type":"string","default":"pep8","description":"Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.unitTest.cwd":{"type":"string","default":null,"description":"Optional working directory for unit tests.","scope":"resource"},"python.unitTest.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of unittests.","scope":"resource"},"python.unitTest.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.nosetestsEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using nosetests.","scope":"resource"},"python.unitTest.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.promptToConfigure":{"type":"boolean","default":true,"description":"Where to prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.unitTest.pyTestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.pyTestEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using pytest.","scope":"resource"},"python.unitTest.pyTestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.unitTest.unittestEnabled":{"type":"boolean","default":false,"description":"Whether to enable or disable unit testing using unittest.","scope":"resource"},"python.unitTest.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Whether to enable or disable auto run test discovery when saving a unit test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":["envs",".pyenv",".direnv"],"description":"Folders in your home directory to look into for virtual environments.","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable Workspace Symbol provider using ctags.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","extensions":[".ipynb"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"vscode:prepublish":"gulp checkNativeDependencies && tsc -p ./ && npm run compile-webviews","compile":"tsc -watch -p ./","compile-webviews-watch":"gulp compile-webviews-watch","compile-webviews":"gulp compile-webviews","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"node ./out/test/unittests.js","test:functional":"node ./out/test/functionalTests.js","testDebugger":"node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/multiRootTest.js","testAnalysisEngine":"node ./out/test/analysisEngineTest.js","testPerformance":"node ./out/test/performanceTest.js","precommit":"node gulpfile.js precommit=true","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","clean":"gulp clean","clean:ptvsd":"gulp clean:ptvsd","cover:enable":"gulp cover:enable","debugger-coverage":"gulp debugger-coverage","cover:inlinesource":"gulp inlinesource"},"dependencies":{"@jupyterlab/services":"^3.1.4","arch":"^2.1.0","azure-storage":"^2.10.1","diff-match-patch":"^1.0.0","dotenv":"^5.0.1","file-matcher":"^1.3.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","getos":"^3.1.0","glob":"^7.1.2","iconv-lite":"^0.4.21","inversify":"^4.11.1","line-by-line":"^0.1.6","lodash":"^4.17.5","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","opn":"^5.3.0","pidusage":"^1.2.0","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^5.5.9","semver":"^5.5.0","sudo-prompt":"^8.2.0","tmp":"^0.0.29","tree-kill":"^1.2.0","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"^0.1.0","vscode-languageclient":"^4.4.0","vscode-languageserver":"^4.4.0","vscode-languageserver-protocol":"^3.10.3","winreg":"^1.2.4","xml2js":"^0.4.19"},"devDependencies":{"@babel/core":"^7.1.0","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^3.2.3","@nteract/transforms":"^4.4.4","@types/prismjs":"^1.9.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/del":"^3.0.0","@types/dotenv":"^4.0.3","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/iconv-lite":"^0.0.1","@types/istanbul":"^0.4.29","@types/jsdom":"^11.12.0","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^2.2.48","@types/node":"9.4.7","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^4.3.0","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","JSONStream":"^1.3.2","ansi-to-html":"^0.6.7","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-prismjs":"^1.0.2","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","codecov":"^3.0.0","colors":"^1.2.1","cross-spawn":"^6.0.5","css-loader":"^1.0.0","debounce":"^1.1.0","decache":"^4.4.0","del":"^3.0.0","download":"^7.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","event-stream":"^3.3.4","file-loader":"^2.0.0","flat":"^4.0.0","gulp":"^4.0.0","gulp-debounced-watch":"^1.0.4","gulp-filter":"^5.1.0","gulp-gitmodified":"^1.1.1","gulp-inline-source":"^3.2.0","gulp-json-editor":"^2.2.2","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-watch":"^5.0.0","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","is-running":"^2.1.0","istanbul":"^0.4.5","jsdom":"^12.2.0","json-loader":"^0.5.7","mocha":"^5.0.4","mocha-junit-reporter":"^1.17.0","node-has-native-dependencies":"^1.0.2","prismjs":"^1.15.0","raw-loader":"^0.5.1","react":"^16.5.2","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","relative":"^3.0.2","remap-istanbul":"^0.10.1","retyped-diff-match-patch-tsd-ambient":"^1.0.0-0","shortid":"^2.2.8","sinon":"^4.4.5","styled-jsx":"^3.1.0","style-loader":"^0.23.0","svg-inline-loader":"^0.8.0","ts-mockito":"^2.3.1","tslint":"^5.9.1","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","typemoq":"^2.1.0","typescript":"^3.1.3","typescript-formatter":"^7.1.0","typed-react-markdown":"^0.1.0","url-loader":"^1.1.1","uuid":"^3.3.2","vscode":"^1.1.21","vscode-debugadapter-testsupport":"^1.27.0","webpack":"^4.20.2","webpack-fix-default-import-plugin":"^1.0.3","yargs":"^12.0.2"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/ms-python.python-2018.10.1","path":"/home/miltfra/.vscode/extensions/ms-python.python-2018.10.1","scheme":"file"}},{"name":"wordcount","displayName":"Word Count","version":"0.1.0","publisher":"ms-vscode","description":"Markdown Word Count Example - a status bar contribution that reports out the number of works in a Markdown document as you interact with it.","author":{"name":"seanmcbreen"},"categories":["Other"],"license":"SEE LICENSE IN LICENSE.txt","icon":"images/icon.svg","galleryBanner":{"color":"#C80000","theme":"dark"},"activationEvents":["onLanguage:markdown"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-wordcount.git"},"engines":{"vscode":"0.10.x"},"main":"/home/miltfra/.vscode/extensions/ms-vscode.wordcount-0.1.0/out/extension","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./"},"devDependencies":{"vscode":"0.10.x"},"uuid":"03bcac69-2a42-4fd3-ac6e-928090766003","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.wordcount","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/ms-vscode.wordcount-0.1.0","path":"/home/miltfra/.vscode/extensions/ms-vscode.wordcount-0.1.0","scheme":"file"}},{"name":"color-highlight","displayName":"Color Highlight","description":"Highlight web colors in your editor","version":"2.3.0","publisher":"naumovs","engines":{"vscode":"^1.10.0"},"categories":["Other"],"activationEvents":["*"],"scripts":{"vscode:prepublish":"webpack","dev":"webpack -w","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"license":"MIT","bugs":{"url":"https://github.com/naumovs/vscode-ext-color-highlight/issues"},"homepage":"https://github.com/naumovs/vscode-ext-color-highlight","repository":{"type":"git","url":"https://github.com/naumovs/vscode-ext-color-highlight.git"},"main":"/home/miltfra/.vscode/extensions/naumovs.color-highlight-2.3.0/dist/extension","icon":"images/preview.png","contributes":{"configuration":{"title":"Color Highlight","properties":{"color-highlight.enable":{"default":true,"description":"Controls if plugin is enabled","type":"boolean"},"color-highlight.languages":{"default":["*"],"description":"An array of language ids which should be higlighted by Color Highlight. \"*\" to trigger on any language; Prepend language id with \"!\" to exclude the language (i.e \"!typescript\", \"!javascript\")","type":"array"},"color-highlight.matchWords":{"default":false,"description":"Highlight color words in all files (grey, green, etc.)","type":"boolean"},"color-highlight.markerType":{"default":"background","description":"Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'","type":"string"},"color-highlight.markRuler":{"default":true,"description":"Highlight colors on the ruler (scroll bar), true/false","type":"boolean"},"color-highlight.sass.includePaths":{"default":[],"description":"Array of absolute paths to search while perform file lookups.","type":"array"}}},"commands":[{"command":"extension.colorHighlight","title":"Highlight colors in current file"}]},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","babel-core":"^6.23.0","babel-eslint":"^7.2.1","babel-loader":"^7.0.0-beta.1","babel-plugin-transform-runtime":"^6.23.0","babel-preset-latest":"^6.23.0","eslint":"^3.18.0","mocha":"^2.3.3","vscode":"^1.0.0","webpack":"^2.3.2"},"dependencies":{"color":"^1.0.3","color-name":"^1.1.2","file-importer":"^1.0.0"},"uuid":"121396ad-85a1-45ec-9fd1-d95028a847f5","isBuiltin":false,"isUnderDevelopment":false,"id":"naumovs.color-highlight","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/naumovs.color-highlight-2.3.0","path":"/home/miltfra/.vscode/extensions/naumovs.color-highlight-2.3.0","scheme":"file"}},{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"3.6.0","publisher":"PKief","engines":{"vscode":"^1.5.0"},"homepage":"https://github.com/PKief/vscode-material-icon-theme/blob/master/README.md","repository":{"type":"git","url":"https://github.com/PKief/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/PKief/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#263238","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"activationEvents":["*"],"main":"/home/miltfra/.vscode/extensions/pkief.material-icon-theme-3.6.0/out/src/extension","contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./out/src/material-icons.json"}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration"},{"command":"material-icon-theme.hidesExplorerArrows","title":"Material Icons: Hide Folder Arrows"},{"command":"material-icon-theme.opacity","title":"Material Icons: Change Opacity"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.showWelcomeMessage":{"type":"boolean","default":true,"description":"Show the welcome message after first installation."},"material-icon-theme.showUpdateMessage":{"type":"boolean","default":false,"description":"Show the update message after each update."},"material-icon-theme.showReloadMessage":{"type":"boolean","default":true,"description":"Show restart notification."},"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."}}}},"scripts":{"vscode:prepublish":"npm run build","prebuild":"npm run lint && npm run clean","build":"npm run compile && npm run generateJson","postbuild":"npm run check","clean":"rimraf ./out","compile":"tsc -p ./","compile:watch":"tsc -watch -p ./","generateJson":"ts-node ./scripts/icons/generateJson.ts","check":"ts-node scripts/icons/checks","postinstall":"node ./node_modules/vscode/bin/install","lint":"tslint -c tslint.json ./src/**/*.ts ./scripts/**/*ts","pretest":"npm run build","test":"node ./node_modules/vscode/bin/test","preview":"npm run build && ts-node ./scripts/preview"},"dependencies":{"lodash.merge":"^4.6.1","opn":"^5.3.0","semver":"^5.5.1"},"devDependencies":{"@types/mocha":"^5.2.5","@types/node":"^10.9.4","@types/puppeteer":"^1.6.3","mocha":"^5.2.0","puppeteer":"^1.8.0","rimraf":"^2.6.2","ts-node":"^7.0.1","tslint":"^5.11.0","typescript":"^3.0.3","vscode":"^1.1.21"},"uuid":"5db78037-f674-459f-a236-db622c427c5b","isBuiltin":false,"isUnderDevelopment":false,"id":"PKief.material-icon-theme","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/pkief.material-icon-theme-3.6.0","path":"/home/miltfra/.vscode/extensions/pkief.material-icon-theme-3.6.0","scheme":"file"}},{"name":"ayu","displayName":"Ayu","description":"A simple theme with bright colors and comes in three versions — dark, light and mirage for all day long comfortable work.","version":"0.17.0","publisher":"teabyii","license":"MIT","repository":{"type":"git","url":"https://github.com/jsenjoy/vscode-ayu"},"bugs":{"url":"https://github.com/jsenjoy/vscode-ayu/issues","email":"teabyii@gmail.com"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["icon-theme","theme","ayu"],"homepage":"https://github.com/jsenjoy/vscode-ayu","icon":"assets/logo.png","contributes":{"themes":[{"label":"Ayu Dark","uiTheme":"vs-dark","path":"./ayu-dark.json"},{"label":"Ayu Dark Bordered","uiTheme":"vs-dark","path":"./ayu-dark-bordered.json"},{"label":"Ayu Light","uiTheme":"vs","path":"./ayu-light.json"},{"label":"Ayu Light Bordered","uiTheme":"vs","path":"./ayu-light-bordered.json"},{"label":"Ayu Mirage","uiTheme":"vs-dark","path":"./ayu-mirage.json"},{"label":"Ayu Mirage Bordered","uiTheme":"vs-dark","path":"./ayu-mirage-bordered.json"}],"iconThemes":[{"id":"ayu","label":"Ayu","path":"./ayu-icons.json"}]},"scripts":{"build":"ts-node ./src/build.ts","package":"vsce package","start":"npm run build; npm run package","publish":"vsce publish"},"devDependencies":{"ayu":"^7.0.2","ts-node":"^7.0.0","typescript":"^3.0.1","vsce":"^1.51.0"},"uuid":"5178733e-4b02-4829-95c5-1ce970847c23","isBuiltin":false,"isUnderDevelopment":false,"id":"teabyii.ayu","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/teabyii.ayu-0.17.0","path":"/home/miltfra/.vscode/extensions/teabyii.ayu-0.17.0","scheme":"file"}},{"name":"raiju","displayName":"Raijū","description":"Raijū is a Visual Studio Code theme inspired by Ariake Dark and Subliminal","license":"MIT","version":"1.12.3","publisher":"TobiasTimm","icon":"icon.png","preview":false,"engines":{"vscode":"^1.22.0"},"keywords":["theme","blue","subliminal","dark","ariake"],"repository":{"type":"git","url":"https://github.com/tobiastimm/raiju.git"},"bugs":{"url":"https://github.com/tobiastimm/raiju/issues"},"categories":["Themes"],"contributes":{"themes":[{"label":"Raijū","uiTheme":"vs-dark","path":"./themes/raiju.json"},{"label":"Raijū - Next","uiTheme":"vs-dark","path":"./themes/raiju-next.json"}]},"uuid":"164a680e-c8b0-4902-9321-dfd1888bf543","isBuiltin":false,"isUnderDevelopment":false,"id":"TobiasTimm.raiju","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/tobiastimm.raiju-1.12.3","path":"/home/miltfra/.vscode/extensions/tobiastimm.raiju-1.12.3","scheme":"file"}},{"name":"subliminalr","displayName":"SubliminalR","description":"Inspired by the Subliminal theme this reloaded version has some extended language support and some personal preferences","license":"MIT","version":"0.2.0","publisher":"TobiasTimm","preview":false,"engines":{"vscode":"^1.22.0"},"keywords":["theme","subliminal","dark","gaeron","subliminalr"],"repository":{"type":"git","url":"https://github.com/tobiastimm/subliminalr.git"},"bugs":{"url":"https://github.com/tobiastimm/subliminalr/issues"},"categories":["Themes"],"contributes":{"themes":[{"label":"SubliminalR","uiTheme":"vs-dark","path":"./themes/subliminalr.json"}]},"uuid":"4eb5aa72-8d86-4fd3-8fe1-e7c6f13cd63a","isBuiltin":false,"isUnderDevelopment":false,"id":"TobiasTimm.subliminalr","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/tobiastimm.subliminalr-0.2.0","path":"/home/miltfra/.vscode/extensions/tobiastimm.subliminalr-0.2.0","scheme":"file"}},{"name":"bibmanager","displayName":"BibManager - BibTex File Management","description":"VS Code extension for managing BibTex bibliographies","version":"1.0.1","author":{"name":"Thomas Day","email":"tday42@gmail.com"},"publisher":"twday","icon":"images/bibmanager-icon.png","license":"MIT","homepage":"https://github.com/twday/vscode-bibmanager/blob/master/README.md","bugs":{"url":"https://github.com/twday/vscode-bibmanager/issues"},"repository":{"type":"git","url":"https://github.com/twday/vscode-bibmanager.git"},"engines":{"vscode":"^1.25.0"},"categories":["Formatters","Snippets","Other"],"activationEvents":["onLanguage:bibtex"],"main":"/home/miltfra/.vscode/extensions/twday.bibmanager-1.0.1/out/extension","keywords":["BibTeX","Sorting","Snippets"],"contributes":{"commands":[{"command":"extension.sortKeyAsc","category":"BibTex","title":"Sort Entries By Key (Ascending)"},{"command":"extension.sortKeyDsc","category":"BibTex","title":"Sort Entries By Key (Descending)"},{"command":"extension.sortTitleAsc","category":"BibTex","title":"Sort Entries By Title (Ascending)"},{"command":"extension.sortTitleDsc","category":"BibTex","title":"Sort Entries By Title (Descending)"}],"snippets":[{"language":"bibtex","path":"./snippets/bibtex.json"}],"grammars":[{"language":"bibtex","scopeName":"text.bibtex","path":"./syntaxes/bibtex.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.6.1","vscode":"^1.1.6","tslint":"^5.8.0","@types/node":"^7.0.43","@types/mocha":"^2.2.42"},"uuid":"1e66de24-eaf6-40e8-a75c-492e45780f90","isBuiltin":false,"isUnderDevelopment":false,"id":"twday.bibmanager","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/twday.bibmanager-1.0.1","path":"/home/miltfra/.vscode/extensions/twday.bibmanager-1.0.1","scheme":"file"}},{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"0.16.12","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.27.0"},"categories":["Other","Keymaps"],"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim-slackin.azurewebsites.net/","main":"/home/miltfra/.vscode/extensions/vscodevim.vim-0.16.12/out/extension","contributes":{"commands":[{"command":"vim.remap","title":"Vim: Remap any key combination that VS Code supports to Vim motions/operators/ExCommands/macro."},{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p>"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<shift+BS> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> &&  !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.overrideCmdV && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"}],"configuration":{"title":"Vim Configuration","type":"object","properties":{"vim.debug.loggingLevel":{"type":"string","description":"Extension logging level","default":"error"},"vim.normalModeKeyBindings":{"type":"array","description":"Remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.useCtrlKeys":{"type":"boolean","description":"Enable some vim ctrl key commands that override otherwise common operations, like ctrl+c","default":true},"vim.leader":{"type":"string","description":"What key should <leader> map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","description":"Color of the search highlight.","default":"rgba(150, 150, 255, 0.3)"},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VSCode's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","description":"Remapped keys in insert mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive keybinding overrides to use for insert mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.visualModeKeyBindings":{"type":"array","description":"Remapped keys in visual mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive keybinding overrides to use for visual mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.textwidth":{"type":"number","description":"Width to word-wrap to when using gq.","default":80},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands","default":1000},"vim.scroll":{"type":"number","description":"Number of lines to scroll with CTRL-U and CTRL-D commands.","default":20},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","description":"keywords contain alphanumeric characters and '_'","default":"/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-"},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","description":"Override the 'ignorecase' option if the search pattern contains upper case characters.","default":true},"vim.easymotion":{"type":"boolean","description":"Enable the EasyMotion plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoChar":{"type":"string","description":"Set a custom color for the text on two character long markers."},"vim.easymotionMarkerWidthPerChar":{"type":"number","description":"Set the width (in pixels) allocated to each character in the match.","default":8},"vim.easymotionMarkerHeight":{"type":"number","description":"Set the height of the marker.","default":14},"vim.easymotionMarkerFontFamily":{"type":"string","description":"Set the font family of the marker text.","default":"Consolas"},"vim.easymotionMarkerFontSize":{"type":"string","description":"Set the font size of the marker text.","default":"14"},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"normal"},"vim.easymotionMarkerYOffset":{"type":"number","description":"Set the Y offset of the marker text (the distance from the top).","default":0},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.sneak":{"type":"boolean","description":"Enable the Sneak plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","description":"Case sensitivity is determined by 'ignorecase' and 'smartcase'","default":false},"vim.surround":{"type":"boolean","description":"Enable the Surround plugin for Vim.","default":true},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern","default":false},"vim.incsearch":{"type":"boolean","description":"Show where a / search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered","default":50},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert Mode."},"vim.handleKeys":{"type":"object","description":"Option to delegate certain key combinations back to VSCode to be handled natively","default":{"<C-d>":true}},"vim.statusBarColorControl":{"type":"boolean","description":"Allow VSCodeVim to change status bar color based on mode","default":false},"vim.statusBarColors.normal":{"type":"string","description":"Status bar color when in Normal mode","default":"#005f5f"},"vim.statusBarColors.insert":{"type":"string","description":"Status bar color when in Insert mode","default":"#5f0000"},"vim.statusBarColors.visual":{"type":"string","description":"Status bar color when in Visual mode","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":"string","description":"Status bar color when in VisualLine mode","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":"string","description":"Status bar color when in VisualBlock mode","default":"#86592d"},"vim.statusBarColors.replace":{"type":"string","description":"Status bar color when in Replace mode","default":"#00000"},"vim.visualstar":{"type":"boolean","description":"In visual mode, start a search with * or # using the current selection","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"Does dragging with the mouse put you into visual mode","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension.","default":false},"vim.enableNeovim":{"type":"boolean","description":"Use neovim on backend. (only works for Ex commands right now). You should restart VScode after enable/disabling this for the changes to take effect. NOTE: Neovim must be installed (v0.2.0) and neovimPath must be set the executable in order for this setting to work. Otherwise, vscodevim will crash.","default":false},"vim.neovimPath":{"type":"string","description":"Path to run neovim executable. For example, /usr/bin/nvim, or  C:\\Program Files\\Neovim\\bin\\nvim.exe","default":"nvim"},"vim.substituteGlobalFlag":{"type":"boolean","description":"Automatically apply the global flag, /g, to substitute commands. When set to true, use /g to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode"},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode"},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode"},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode"},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode"},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode"},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"Switch input method automatically when mode changed","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","description":"The input method for your normal mode, find more information here:https://github.com/VSCodeVim/Vim#use-im-select","default":""},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method","default":"/path/to/im-select {im}"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method","default":"/path/to/im-select"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":""}}}},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","test":"node ./node_modules/vscode/bin/test","forceprettier":"gulp forceprettier","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"appdirectory":"0.1.0","clipboardy":"1.2.3","diff-match-patch":"1.0.4","lodash":"4.17.11","mkdirp":"0.5.1","neovim-client":"2.1.0","promised-neovim-client":"2.0.2","untildify":"3.0.3","winston":"3.1.0","winston-console-for-electron":"0.0.3"},"devDependencies":{"@types/clipboardy":"1.1.0","@types/copy-paste":"1.1.30","@types/diff":"3.5.1","@types/diff-match-patch":"1.0.32","@types/lodash":"4.14.117","@types/mocha":"5.2.5","@types/node":"9.6.35","@types/sinon":"5.0.5","gulp":"4.0.0","gulp-bump":"3.1.1","gulp-git":"2.8.0","gulp-sourcemaps":"2.6.4","gulp-tag-version":"1.3.1","gulp-tslint":"8.1.3","gulp-typescript":"4.0.2","minimist":"1.2.0","mocha":"5.2.0","plugin-error":"1.0.1","prettier":"1.14.3","sinon":"7.0.0","tslint":"5.11.0","typescript":"3.1.3","vscode":"1.1.21"},"uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","isBuiltin":false,"isUnderDevelopment":false,"id":"vscodevim.vim","extensionLocation":{"$mid":1,"fsPath":"/home/miltfra/.vscode/extensions/vscodevim.vim-0.16.12","path":"/home/miltfra/.vscode/extensions/vscodevim.vim-0.16.12","scheme":"file"}}]}